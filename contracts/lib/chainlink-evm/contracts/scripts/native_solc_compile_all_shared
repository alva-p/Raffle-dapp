#!/usr/bin/env bash

set -e

echo " ┌──────────────────────────────────────────────┐"
echo " │          Compiling shared contracts...       │"
echo " └──────────────────────────────────────────────┘"

PROJECT="shared"
FOUNDRY_PROJECT_SUFFIX=""

CONTRACTS_DIR="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; cd ../ && pwd -P )"
export FOUNDRY_PROFILE="$PROJECT"$FOUNDRY_PROJECT_SUFFIX

compileContract() {
  local path="$1"
  local version="$2"
  local project="$3"

  local contract
  contract=$(basename "$path")
  echo "Compiling" "$contract"

  local current_project="$PROJECT"
  if [ -n "$project" ]; then
    echo "Compiling from another project: ""$project"
    current_project=$project
  fi

  # Build base command
  local command
  command="forge build $CONTRACTS_DIR/src/v0.8/$current_project/"$path.sol" \
   --root $CONTRACTS_DIR \
   --extra-output-files bin abi"

  # Add version if provided
  if [ -n "$version" ]; then
    command="$command \
   --use $version"
  fi

  # Output directory
  command="$command \
   -o $CONTRACTS_DIR/solc/$PROJECT/$contract"

  $command

  # Copy the generated abi files to a single folder
  mkdir -p "$CONTRACTS_DIR"/abi/v0.8/"$PROJECT"
  cp "$CONTRACTS_DIR"/solc/$PROJECT/"$contract"/"$contract".sol/"$contract".abi.json "$CONTRACTS_DIR"/abi/v0.8/"$PROJECT"/"$contract".abi.json
}

# Various contracts are compiled with v0.8.19 instead of the default specified in foundry.toml.
compileContract interfaces/AggregatorV3Interface 0.8.19
compileContract interfaces/ITypeAndVersion 0.8.19
compileContract token/ERC677/ERC677 0.8.19
compileContract token/ERC677/BurnMintERC677 0.8.19
compileContract token/ERC677/LinkToken 0.8.19
compileContract token/ERC20/BurnMintERC20 0.8.19

compileContract token/ERC20/upgradeable/BurnMintERC20PausableFreezableTransparent
compileContract token/ERC20/upgradeable/BurnMintERC20PausableFreezableUUPS
compileContract token/ERC20/upgradeable/BurnMintERC20PausableTransparent
compileContract token/ERC20/upgradeable/BurnMintERC20PausableUUPS
compileContract token/ERC20/upgradeable/BurnMintERC20Transparent
compileContract token/ERC20/upgradeable/BurnMintERC20UUPS
compileContract token/ERC20/upgradeable/IBurnMintERC20Upgradeable

compileContract test/helpers/BurnMintERC20WithDrip 0.8.19
compileContract test/helpers/ChainReaderTester 0.8.19
compileContract test/helpers/LogEmitter 0.8.19
compileContract test/helpers/VRFLogEmitter 0.8.19
compileContract mocks/MockV3Aggregator 0.8.19
compileContract mocks/WERC20Mock 0.8.19
compileContract token/ERC20/zksync/WETH9ZKSync 0.8.19

compileContract @openzeppelin/contracts-4.8.3/token/ERC20/ERC20 0.8.19 ../../node_modules
compileContract multicall/ebd8b64/src/Multicall3 0.8.19 vendor
compileContract canonical-weth/WETH9 0.8.19 vendor
